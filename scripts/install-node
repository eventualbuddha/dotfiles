#!/bin/zsh

set -euo pipefail

cmd=$(basename ${0})

version=
set_lts=false
architecture=

while [ $# -gt 0 ]; do
  case "${1}" in
    -h|--help)
      echo "usage: ${cmd} [--lts] <version>"
      echo
      echo "Manages Node.js installs with the specified <version> and optionally aliases"
      echo "it to 'lts' given the '--lts' flag."
      exit 0
      ;;

    --lts)
      set_lts=true
      ;;

    -*)
      echo "✘ unexpected argument: ${1}" >&2
      exit 1
      ;;

    *)
      if [ -n "${version}" ]; then
        echo "✘ unexpected argument after version: ${1}" >&2
        exit 1
      fi
      version="${1}"
      ;;
  esac

  shift
done

if [ -z "${version}" ]; then
  echo "✘ missing version" >&2
  exit 1
fi

if [ "$(uname)" = "Darwin" ]; then
  architecture="darwin-x64"
else
  architecture="linux-x64"
fi

scripts_directory="${0:a:h}"

if [ "${cmd}" = "install-node" ]; then
  tarball_url="https://nodejs.org/dist/v${version}/node-v${version}-${architecture}.tar.gz"

  "${scripts_directory}/install-package" \
    node \
    "${version}" \
    "${tarball_url}"

  if [ "$("${HOME}/.bin/node/${version}/bin/node" -v 2>/dev/null)" != "v${version}" ]; then
    echo "✘ verification of node ${version} failed" >&2
    exit 1
  fi

  if [ "${set_lts}" = "true" ]; then
    "${scripts_directory}/alias-package" \
      node \
      "${version}" \
      lts
  fi
elif [ "${cmd}" = "uninstall-node" ]; then
  "${scripts_directory}/uninstall-package" \
    node \
    "${version}"
  
  if [ "${set_lts}" = "true" ]; then
    "${scripts_directory}/unalias-package" \
      node \
      "${version}" \
      lts
  fi
else
  echo "✘ unknown command name: ${cmd}" >&2
  exit 1
fi
